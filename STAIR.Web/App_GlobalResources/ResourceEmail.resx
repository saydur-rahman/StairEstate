<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CS_APPROVEDREJECT_SUBJECT" xml:space="preserve">
    <value>Comparative Statement has been rejected</value>
  </data>
  <data name="CS_APPROVED_SUBJECT" xml:space="preserve">
    <value>Comparative Statement has been approved</value>
  </data>
  <data name="CS_PENDING_SUBJECT" xml:space="preserve">
    <value>Comparative Statement has been prepared</value>
  </data>
  <data name="CS_REVIEWED_SUBJECT" xml:space="preserve">
    <value>Comparative Statement has been reviewed</value>
  </data>
  <data name="CS_REVIEWREJECT_SUBJECT" xml:space="preserve">
    <value>Comparative Statement has been review</value>
  </data>
  <data name="CS_RE_PENDING_SUBJECT" xml:space="preserve">
    <value>Comparative Statement has been prepared again</value>
  </data>
  <data name="DEMAND_APPROVE_BODY_1" xml:space="preserve">
    <value>The demand No. {0}  has been approved. \n</value>
  </data>
  <data name="DEMAND_APPROVE_BODY_2" xml:space="preserve">
    <value>This demand approved by {0}</value>
  </data>
  <data name="DEMAND_APPROVE_SUBJECT" xml:space="preserve">
    <value>Demand has been approved!</value>
  </data>
  <data name="DEMAND_PENDING_BODY_1" xml:space="preserve">
    <value>New demand has been created with Demand No. {0}. \n</value>
  </data>
  <data name="DEMAND_PENDING_BODY_2" xml:space="preserve">
    <value>This demand is waiting for your approval.</value>
  </data>
  <data name="DEMAND_PENDING_SUBJECT" xml:space="preserve">
    <value>New Demand has been created!</value>
  </data>
  <data name="DEMAND_REJECT_BODY_1" xml:space="preserve">
    <value>The demand No.{0}  has been rejected. \n</value>
  </data>
  <data name="DEMAND_REJECT_BODY_2" xml:space="preserve">
    <value>This demand rejected by {0}</value>
  </data>
  <data name="DEMAND_REJECT_SUBJECT" xml:space="preserve">
    <value>Demand has been rejected!</value>
  </data>
  <data name="DEMAND_RE_PENDING_BODY_1" xml:space="preserve">
    <value>The demand has been updated with Demand No. {0}. \n</value>
  </data>
  <data name="DEMAND_RE_PENDING_BODY_2" xml:space="preserve">
    <value>This demand is waiting for your approval.</value>
  </data>
  <data name="DEMAND_RE_PENDING_SUBJECT" xml:space="preserve">
    <value>The Demand has been emeded!</value>
  </data>
  <data name="ISSUE_APPROVEDREJECTED_SUBJECT" xml:space="preserve">
    <value>Item issue has been approve rejected</value>
  </data>
  <data name="ISSUE_APPROVED_SUBJECT" xml:space="preserve">
    <value>Item issue has been approve</value>
  </data>
  <data name="ISSUE_ISSUED_SUBJECT" xml:space="preserve">
    <value>Item issue has been issued</value>
  </data>
  <data name="ISSUE_PENDING_SUBJECT" xml:space="preserve">
    <value>Item issue has been prepared</value>
  </data>
  <data name="ISSUE_RECIEVEDREJECTED_SUBJECT" xml:space="preserve">
    <value>Issued item has been rejected</value>
  </data>
  <data name="ISSUE_RECIEVED_SUBJECT" xml:space="preserve">
    <value>Issued item has been accepted</value>
  </data>
  <data name="ISSUE_RE_PENDING_SUBJECT" xml:space="preserve">
    <value>Item issue has been prepared again</value>
  </data>
  <data name="OPENING_APPROVED_BODY_1" xml:space="preserve">
    <value>The item open request has been approved. \n</value>
  </data>
  <data name="OPENING_APPROVED_BODY_2" xml:space="preserve">
    <value>The item open request was initiated by {0} on {1}.\n</value>
  </data>
  <data name="OPENING_APPROVED_BODY_3" xml:space="preserve">
    <value>This is approved by {0}. \n</value>
  </data>
  <data name="OPENING_APPROVED_SUBJECT" xml:space="preserve">
    <value>Item opening has been approved!</value>
  </data>
  <data name="OPENING_APPROVEREJECTED_BODY_1" xml:space="preserve">
    <value>The item open request has been rejected. \n</value>
  </data>
  <data name="OPENING_APPROVEREJECTED_BODY_2" xml:space="preserve">
    <value>The item open request was initiated by {0} on {1}. \n</value>
  </data>
  <data name="OPENING_APPROVEREJECTED_BODY_3" xml:space="preserve">
    <value>This is rejected by {0}. \n</value>
  </data>
  <data name="OPENING_APPROVEREJECTED_SUBJECT" xml:space="preserve">
    <value>Item opening has been rejected!</value>
  </data>
  <data name="OPENING_PENDING_BODY_1" xml:space="preserve">
    <value>The item opening has been initiated by {0} on {1}.\n</value>
  </data>
  <data name="OPENING_PENDING_BODY_2" xml:space="preserve">
    <value>This requires your approval.\n</value>
  </data>
  <data name="OPENING_PENDING_SUBJECT" xml:space="preserve">
    <value>New item opening!</value>
  </data>
  <data name="OPENING_RE_PENDING_BODY_1" xml:space="preserve">
    <value>The item opening has been updated by {0} on {1}. \n</value>
  </data>
  <data name="OPENING_RE_PENDING_BODY_2" xml:space="preserve">
    <value>This requires your approval.\n</value>
  </data>
  <data name="OPENING_RE_PENDING_SUBJECT" xml:space="preserve">
    <value>Item opening updated!</value>
  </data>
  <data name="PROCREQ_APPROVEDREJECT_SUBJECT" xml:space="preserve">
    <value>Procurement Requisition has been rejected</value>
  </data>
  <data name="PROCREQ_APPROVED_SUBJECT" xml:space="preserve">
    <value>Procurement Requisition has been approved</value>
  </data>
  <data name="PROCREQ_PENDING_SUBJECT" xml:space="preserve">
    <value>Procurement Requisition has been prepared</value>
  </data>
  <data name="PROCREQ_REVIEWED_SUBJECT" xml:space="preserve">
    <value>Procurement Requisition has been reviewed</value>
  </data>
  <data name="PROCREQ_REVIEWREJECT_SUBJECT" xml:space="preserve">
    <value>Procurement Requisition has been reviewed</value>
  </data>
  <data name="PROCREQ_RE_PENDING_SUBJECT" xml:space="preserve">
    <value>Procurement Requisition has been prepared again</value>
  </data>
  <data name="PURORDER_APPROVEDREJECT_SUBJECT" xml:space="preserve">
    <value>Purchase Ordern has been rejected</value>
  </data>
  <data name="PURORDER_APPROVED_SUBJECT" xml:space="preserve">
    <value>Purchase Order has been approved</value>
  </data>
  <data name="PURORDER_PENDING_SUBJECT" xml:space="preserve">
    <value>Purchase Order has been prepared</value>
  </data>
  <data name="PURORDER_REVIEWED_SUBJECT" xml:space="preserve">
    <value>Purchase Order has been reviewed</value>
  </data>
  <data name="PURORDER_REVIEWREJECT_SUBJECT" xml:space="preserve">
    <value>Purchase Order has been reviewed</value>
  </data>
  <data name="PURORDER_RE_PENDING_SUBJECT" xml:space="preserve">
    <value>Purchase Order has been prepared again</value>
  </data>
  <data name="SCRAP_APPROVED_BODY_1" xml:space="preserve">
    <value>The Scrap or Expire item request has been approved. \n</value>
  </data>
  <data name="SCRAP_APPROVED_BODY_2" xml:space="preserve">
    <value>The Scrap or Expire item(s) was initiated by {0} on {1}. \n</value>
  </data>
  <data name="SCRAP_APPROVED_BODY_3" xml:space="preserve">
    <value>This is approved by {0}. \n</value>
  </data>
  <data name="SCRAP_APPROVED_SUBJECT" xml:space="preserve">
    <value>Scrap or Expire item has been approved!</value>
  </data>
  <data name="SCRAP_APPROVEREJECTED_BODY_1" xml:space="preserve">
    <value>The Scrap or Expire item request has been rejected. \n</value>
  </data>
  <data name="SCRAP_APPROVEREJECTED_BODY_2" xml:space="preserve">
    <value>The Scrap or Expire item(s) was initiated by {0} on {1}. \n</value>
  </data>
  <data name="SCRAP_APPROVEREJECTED_BODY_3" xml:space="preserve">
    <value>This is rejected by {0}. \n</value>
  </data>
  <data name="SCRAP_APPROVEREJECTED_SUBJECT" xml:space="preserve">
    <value>Scrap or Expire item has been rejected!</value>
  </data>
  <data name="SCRAP_PENDING_BODY_1" xml:space="preserve">
    <value>Scrap or Expire item(s) has been initiated by {0} on {1}. \n</value>
  </data>
  <data name="SCRAP_PENDING_BODY_2" xml:space="preserve">
    <value>This requires your approval. \n</value>
  </data>
  <data name="SCRAP_PENDING_SUBJECT" xml:space="preserve">
    <value>Scrap or Expire item!</value>
  </data>
  <data name="SCRAP_RE_PENDING_BODY_1" xml:space="preserve">
    <value>Scrap or Expire item(s) has been updated by {0} on {1}. \n</value>
  </data>
  <data name="SCRAP_RE_PENDING_BODY_2" xml:space="preserve">
    <value>This requires your approval. \n</value>
  </data>
  <data name="SCRAP_RE_PENDING_SUBJECT" xml:space="preserve">
    <value>Scrap or Expire item!</value>
  </data>
  <data name="UNUSABLE_APPROVED_BODY_1" xml:space="preserve">
    <value>The return No. {0}  has been approved. \n</value>
  </data>
  <data name="UNUSABLE_APPROVED_BODY_2" xml:space="preserve">
    <value>This return approved by {0}. \n</value>
  </data>
  <data name="UNUSABLE_APPROVED_SUBJECT" xml:space="preserve">
    <value>Return has been approved!</value>
  </data>
  <data name="UNUSABLE_APPROVEREJECTED_BODY_1" xml:space="preserve">
    <value>The return No. {0} has been rejected. \n</value>
  </data>
  <data name="UNUSABLE_APPROVEREJECTED_BODY_2" xml:space="preserve">
    <value>This return rejected by {0}. \n</value>
  </data>
  <data name="UNUSABLE_APPROVEREJECTED_SUBJECT" xml:space="preserve">
    <value>Return has been rejected!</value>
  </data>
  <data name="UNUSABLE_PENDING_BODY_1" xml:space="preserve">
    <value>New return has been created with return No.{0}. \n</value>
  </data>
  <data name="UNUSABLE_PENDING_BODY_2" xml:space="preserve">
    <value>This return is waiting for your approval. \n</value>
  </data>
  <data name="UNUSABLE_PENDING_SUBJECT" xml:space="preserve">
    <value>New return has been created!</value>
  </data>
  <data name="UNUSABLE_RE_PENDING_BODY_1" xml:space="preserve">
    <value>The return has been updated with return No. {0}. \n</value>
  </data>
  <data name="UNUSABLE_RE_PENDING_BODY_2" xml:space="preserve">
    <value>This return is waiting for your approval. \n</value>
  </data>
  <data name="UNUSABLE_RE_PENDING_SUBJECT" xml:space="preserve">
    <value>The return has been emeded!</value>
  </data>
</root>